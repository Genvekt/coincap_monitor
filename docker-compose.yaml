version: '3.3'

services:
  pipeline:
    depends_on:
      warehouse:
        condition: service_healthy
    image: pipeline
    container_name: pipeline
    build:
      context: ./pipeline
      dockerfile: ./docker/Dockerfile
    volumes:
      - ./pipeline:/app
      - ${PIPELINE_LOG_DIR}:/var/log
    environment:
      API_URL: ${API_URL}
      API_KEY: ${API_KEY}
      COIN_ID: ${COIN_ID}
      CRON_LOG_FILE: /var/log/cron.log
      PIPELINE_LOG_FILE: /var/log/pipeline.log
      CLICKHOUSE_HOST: ${CLICKHOUSE_HOST}
      CLICKHOUSE_DB: ${CLICKHOUSE_DB}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      CLICKHOUSE_PORT: ${CLICKHOUSE_PORT}
    networks:
      - default

  warehouse:
    image: yandex/clickhouse-server
    container_name: warehouse
    ports:
      - "8123:8123"
      - "9000:9000"
      - "9009:9009"
    ulimits:
      nproc: 65535
      nofile:
       soft: 262144
       hard: 262144
    environment:
      CLICKHOUSE_DB: ${CLICKHOUSE_DB}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      CLICKHOUSE_PORT: ${CLICKHOUSE_PORT}
    volumes:
      - ${WAREHOUSE_LOG_DIR}/log:/var/log/clickhouse-server
      - ${WAREHOUSE_DB_DIR}/data:/var/lib/clickhouse
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "localhost:8123/ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - default
  
  dashboard:
    image: dashboard
    container_name: dashboard
    build:
      context: ./dashboard/docker
      dockerfile: ./Dockerfile
    ports:
      - "3000:3000"
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: ${POSTGRES_DB}
      MB_DB_PORT: ${POSTGRES_PORT}
      MB_DB_USER: ${POSTGRES_USER}
      MB_DB_PASS: ${POSTGRES_PASSWORD}
      MB_DB_HOST: dashboard_db
    depends_on:
      dashboard_db:
        condition: service_healthy
    networks:
      - default

  dashboard_db:
    image: postgres
    container_name: dashboard_db
    volumes:
      - ${DASHBOARD_DB_DIR}:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DASHBOARD_DB_PORT}:${POSTGRES_PORT}"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      retries: 5
    restart: always
    networks:
      - default

networks:
  default:
    external:
      name: CoinCapNet


    

